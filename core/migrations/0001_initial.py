# Generated by Django 5.2.3 on 2025-07-01 12:24

import core.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Anlage1Config",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("enable_q1", models.BooleanField(default=True)),
                ("enable_q2", models.BooleanField(default=True)),
                ("enable_q3", models.BooleanField(default=True)),
                ("enable_q4", models.BooleanField(default=True)),
                ("enable_q5", models.BooleanField(default=True)),
                ("enable_q6", models.BooleanField(default=True)),
                ("enable_q7", models.BooleanField(default=True)),
                ("enable_q8", models.BooleanField(default=True)),
                ("enable_q9", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Anlage1 Konfiguration",
            },
        ),
        migrations.CreateModel(
            name="Anlage1Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("num", models.PositiveSmallIntegerField(unique=True)),
                ("text", models.TextField()),
                ("enabled", models.BooleanField(default=True)),
                ("parser_enabled", models.BooleanField(default=True)),
                ("llm_enabled", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["num"],
            },
        ),
        migrations.CreateModel(
            name="Anlage2Config",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "singleton_enforcer",
                    models.BooleanField(default=True, editable=False, unique=True),
                ),
                (
                    "enforce_subquestion_override",
                    models.BooleanField(
                        default=False,
                        help_text="Wenn aktiviert, wird eine Hauptfunktion automatisch als 'technisch vorhanden' markiert, wenn mindestens eine ihrer Unterfragen als 'technisch vorhanden' bewertet wird.",
                    ),
                ),
                (
                    "parser_mode",
                    models.CharField(
                        choices=[
                            ("auto", "Automatisch"),
                            ("table_only", "Nur Tabellen"),
                            ("text_only", "Nur Text"),
                        ],
                        default="auto",
                        max_length=20,
                    ),
                ),
                (
                    "parser_order",
                    models.JSONField(
                        default=list,
                        help_text="Reihenfolge der zu verwendenden Parser.",
                    ),
                ),
                (
                    "text_technisch_verfuegbar_true",
                    models.JSONField(
                        default=list,
                        help_text="Reihenfolge der zu verwendenden Parser.",
                    ),
                ),
            ],
            options={
                "verbose_name": "Anlage2 Konfiguration",
            },
        ),
        migrations.CreateModel(
            name="Anlage2Function",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Area",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.SlugField(unique=True)),
                (
                    "name",
                    models.CharField(
                        help_text="Einzigartiger Name des Bereichs, z.B. 'work' oder 'personal'",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="area_images/"),
                ),
            ],
            options={
                "ordering": ["slug"],
            },
        ),
        migrations.CreateModel(
            name="BVProject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(blank=True, max_length=50, verbose_name="Titel"),
                ),
                (
                    "beschreibung",
                    models.TextField(blank=True, verbose_name="Beschreibung"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Erstellt am"),
                ),
                (
                    "classification_json",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Klassifizierung"
                    ),
                ),
                (
                    "gutachten_file",
                    models.FileField(
                        blank=True, upload_to="gutachten", verbose_name="Gutachten"
                    ),
                ),
                (
                    "gutachten_function_note",
                    models.TextField(blank=True, verbose_name="LLM-Hinweis Gutachten"),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="LLMConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("default_model", models.CharField(blank=True, max_length=100)),
                ("gutachten_model", models.CharField(blank=True, max_length=100)),
                ("anlagen_model", models.CharField(blank=True, max_length=100)),
                ("vision_model", models.CharField(blank=True, max_length=100)),
                ("available_models", models.JSONField(blank=True, null=True)),
                ("models_changed", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "LLM Konfiguration",
            },
        ),
        migrations.CreateModel(
            name="LLMRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Ein kurzer, wiedererkennbarer Name für die Rolle.",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "role_prompt",
                    models.TextField(
                        help_text="Der eigentliche System-Prompt, der die Persona und Anweisungen für die KI definiert."
                    ),
                ),
                (
                    "is_default",
                    models.BooleanField(
                        default=False,
                        help_text="Soll diese Rolle als globaler Standard verwendet werden, wenn einem Prompt keine spezifische Rolle zugewiesen ist?",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProjectStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("key", models.CharField(max_length=50, unique=True)),
                ("ordering", models.PositiveIntegerField(default=0)),
                ("is_default", models.BooleanField(default=False)),
                ("is_done_status", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["ordering", "name"],
            },
        ),
        migrations.CreateModel(
            name="SoftwareType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Anlage1QuestionVariant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variants",
                        to="core.anlage1question",
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="Anlage2ColumnHeading",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "field_name",
                    models.CharField(
                        choices=[
                            ("technisch_vorhanden", "Technisch vorhanden"),
                            ("einsatz_bei_telefonica", "Einsatz bei Telefónica"),
                            ("zur_lv_kontrolle", "Zur LV-Kontrolle"),
                            ("ki_beteiligung", "KI-Beteiligung"),
                        ],
                        max_length=50,
                    ),
                ),
                ("text", models.CharField(max_length=200)),
                (
                    "config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="headers",
                        to="core.anlage2config",
                    ),
                ),
            ],
            options={
                "ordering": ["field_name", "id"],
            },
        ),
        migrations.CreateModel(
            name="Anlage2SubQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("frage_text", models.TextField()),
                (
                    "funktion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.anlage2function",
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="BVProjectFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "anlage_nr",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "1"),
                            (2, "2"),
                            (3, "3"),
                            (4, "4"),
                            (5, "5"),
                            (6, "6"),
                        ],
                        verbose_name="Anlage Nr",
                    ),
                ),
                (
                    "upload",
                    models.FileField(upload_to="bv_files", verbose_name="Upload"),
                ),
                (
                    "text_content",
                    models.TextField(blank=True, verbose_name="Textinhalt"),
                ),
                (
                    "analysis_json",
                    models.JSONField(blank=True, null=True, verbose_name="Analyse"),
                ),
                ("manual_analysis_json", models.JSONField(blank=True, null=True)),
                (
                    "manual_comment",
                    models.TextField(blank=True, verbose_name="Kommentar"),
                ),
                ("question_review", models.JSONField(blank=True, null=True)),
                (
                    "verification_json",
                    models.JSONField(
                        blank=True,
                        help_text="Ergebnis der KI-gestützten Verifizierung der Funktionen.",
                        null=True,
                    ),
                ),
                (
                    "manual_reviewed",
                    models.BooleanField(default=False, verbose_name="Manuell geprüft"),
                ),
                (
                    "verhandlungsfaehig",
                    models.BooleanField(
                        default=False, verbose_name="Verhandlungsfähig"
                    ),
                ),
                (
                    "projekt",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="anlagen",
                        to="core.bvproject",
                    ),
                ),
            ],
            options={
                "ordering": ["anlage_nr"],
            },
        ),
        migrations.CreateModel(
            name="BVSoftware",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "projekt",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.bvproject"
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="BVProjectStatusHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("changed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "projekt",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status_history",
                        to="core.bvproject",
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        default=core.models.get_default_project_status,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.projectstatus",
                    ),
                ),
            ],
            options={
                "ordering": ["changed_at"],
            },
        ),
        migrations.AddField(
            model_name="bvproject",
            name="status",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="projects",
                to="core.projectstatus",
            ),
        ),
        migrations.CreateModel(
            name="Prompt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("text", models.TextField()),
                (
                    "use_system_role",
                    models.BooleanField(
                        default=True,
                        help_text="Wenn aktiviert, wird diesem Prompt der globale oder zugewiesene Rollen-Prompt vorangestellt. Deaktivieren für einfache Abfragen, die eine strikte, kurze Antwort erfordern.",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        blank=True,
                        help_text="Optionale, spezifische Rolle für diesen Prompt. Überschreibt die globale Standard-Rolle.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.llmrole",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Recording",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "audio_file",
                    models.FileField(upload_to=core.models.recording_upload_path),
                ),
                (
                    "transcript_file",
                    models.FileField(
                        blank=True, upload_to=core.models.transcript_upload_path
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("duration", models.FloatField(blank=True, null=True)),
                ("excerpt", models.TextField(blank=True)),
                (
                    "bereich",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.area"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SoftwareKnowledge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("software_name", models.CharField(max_length=100)),
                ("is_known_by_llm", models.BooleanField(default=False)),
                ("description", models.TextField(blank=True)),
                ("last_checked", models.DateTimeField(blank=True, null=True)),
                (
                    "projekt",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="softwareknowledge",
                        to="core.bvproject",
                    ),
                ),
            ],
            options={
                "ordering": ["software_name"],
                "unique_together": {("projekt", "software_name")},
            },
        ),
        migrations.CreateModel(
            name="Gutachten",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "software_knowledge",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="gutachten",
                        to="core.softwareknowledge",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Tile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.SlugField(unique=True)),
                ("name", models.CharField(max_length=100)),
                ("url_name", models.CharField(max_length=100)),
                ("icon", models.CharField(blank=True, max_length=50)),
                ("description", models.CharField(blank=True, max_length=200)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="tile_images/"),
                ),
                (
                    "areas",
                    models.ManyToManyField(
                        help_text="Die Bereiche, in denen diese Kachel angezeigt wird.",
                        related_name="tiles",
                        to="core.area",
                    ),
                ),
            ],
            options={
                "ordering": ["slug"],
            },
        ),
        migrations.CreateModel(
            name="UserAreaAccess",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "area",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.area"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "area")},
            },
        ),
        migrations.AddField(
            model_name="area",
            name="users",
            field=models.ManyToManyField(
                blank=True,
                help_text="Benutzer mit Zugriff auf diesen Bereich.",
                related_name="areas",
                through="core.UserAreaAccess",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="UserTileAccess",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.tile"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "tile")},
            },
        ),
        migrations.AddField(
            model_name="tile",
            name="users",
            field=models.ManyToManyField(
                related_name="tiles",
                through="core.UserTileAccess",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Anlage2FunctionResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("technisch_verfuegbar", models.BooleanField(null=True)),
                ("ki_beteiligung", models.BooleanField(null=True)),
                ("raw_json", models.JSONField(blank=True, null=True)),
                ("source", models.CharField(default="llm", max_length=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "funktion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.anlage2function",
                    ),
                ),
                (
                    "projekt",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.bvproject"
                    ),
                ),
            ],
            options={
                "ordering": ["funktion__name"],
                "unique_together": {("projekt", "funktion")},
            },
        ),
        migrations.CreateModel(
            name="Anlage2GlobalPhrase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "phrase_type",
                    models.CharField(
                        choices=[
                            ("technisch_verfuegbar_true", "Technisch verfügbar (Ja)"),
                            (
                                "technisch_verfuegbar_false",
                                "Technisch verfügbar (Nein)",
                            ),
                            ("einsatz_telefonica_true", "Einsatz bei Telefónica (Ja)"),
                            (
                                "einsatz_telefonica_false",
                                "Einsatz bei Telefónica (Nein)",
                            ),
                            ("zur_lv_kontrolle_true", "Zur LV-Kontrolle (Ja)"),
                            ("zur_lv_kontrolle_false", "Zur LV-Kontrolle (Nein)"),
                            ("ki_beteiligung_true", "KI-Beteiligung (Ja)"),
                            ("ki_beteiligung_false", "KI-Beteiligung (Nein)"),
                        ],
                        max_length=50,
                        unique=True,
                    ),
                ),
                ("phrase_text", models.TextField(blank=True)),
            ],
        ),
    ]
