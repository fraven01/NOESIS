# Generated by Django 5.2.4 on 2025-07-13 22:48

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0017_anlage2functionresult_result_fields"),
    ]

    operations = [
        migrations.CreateModel(
            name="ZweckKategorieA",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("beschreibung", models.TextField()),
            ],
            options={
                "verbose_name": "Zweck Kategorie A",
                "verbose_name_plural": "Zwecke Kategorie A",
                "ordering": ["id"],
            },
        ),
        migrations.RunPython(
            lambda apps, schema_editor: apps.get_model("core", "ZweckKategorieA").objects.bulk_create(
                [
                    apps.get_model("core", "ZweckKategorieA")(beschreibung="Leistungsvergleiche von Mitarbeitern oder Mitarbeitergruppen (wenn eine der Gruppen nicht größer als 5 Personen ist)."),
                    apps.get_model("core", "ZweckKategorieA")(beschreibung="Abgleich von Verhalten oder Leistung eines Mitarbeiters oder einer Mitarbeitergruppe (wenn eine der Gruppen nicht größer als 5 Personen ist) mit bestimmten Durchschnittsleistungen von Mitarbeitergruppen."),
                    apps.get_model("core", "ZweckKategorieA")(beschreibung="Messung der Qualität oder Quantität der Leistung eines Mitarbeiters oder von Kenntnissen oder Fähigkeiten, um das Ergebnis der Messung mit einem Sollwert oder Vorgaben (z. B. betriebliche Ziele) abzugleichen."),
                    apps.get_model("core", "ZweckKategorieA")(beschreibung="Messung der Auslastung von Mitarbeitern."),
                    apps.get_model("core", "ZweckKategorieA")(beschreibung="Feststellung der vergangenheitsbezogenen Termine bzw. Erreichbarkeit oder persönlichen Verfügbarkeit eines Mitarbeiters."),
                    apps.get_model("core", "ZweckKategorieA")(beschreibung="Feststellung der Termine bzw. Erreichbarkeit oder persönlichen Verfügbarkeit des Mitarbeiters in Echtzeit."),
                    apps.get_model("core", "ZweckKategorieA")(beschreibung="Feststellung der zukünftigen Termine bzw. Erreichbarkeit oder persönlichen Verfügbarkeit des Mitarbeiters in Echtzeit."),
                    apps.get_model("core", "ZweckKategorieA")(beschreibung="Erstellung von Bewertungen von Leistung oder Verhalten von Mitarbeitern (z. B. Zeugnisse, Scorecards etc.)."),
                    apps.get_model("core", "ZweckKategorieA")(beschreibung="Identifikation von Mitarbeitern nach bestimmten Skills (Kenntnisse, Fähigkeiten und Erfahrungen)."),
                    apps.get_model("core", "ZweckKategorieA")(beschreibung="Erstellung von Persönlichkeitsprofilen."),
                    apps.get_model("core", "ZweckKategorieA")(beschreibung="Ermittlung des aktuellen Arbeitsortes/Aufenthaltsortes."),
                ]
            ),
            reverse_code=migrations.RunPython.noop,
        ),
    ]
